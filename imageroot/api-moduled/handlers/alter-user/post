#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import agent
import json
import sys
import subprocess
import os
import samba

request = json.load(sys.stdin)
user = request['user']

sambatool_cmd = ['podman', 'exec', '-i', 'samba-dc', 'samba-tool']

if 'password' in request:
    password = request['password']
    inputdata = password + "\n" + password + "\n"
    setpassword_cmd = sambatool_cmd + ['user', 'setpassword', user]
    if request['must_change_password']:
        setpassword_cmd += ['--must-change-at-next-login']
    subprocess.run(setpassword_cmd, input=inputdata,
                   stdout=sys.stderr, check=True, text=True)

if 'no_password_expiration' in request:
    dn_str, user_account_control = samba.get_user_account_control(user)
    samba.set_user_account_control(dn_str, user_account_control, request['no_password_expiration'])

if 'locked' in request:
    if request['locked'] == True:
        setenabled_cmd = sambatool_cmd + ['user', 'disable', user]
    else:
        setenabled_cmd = sambatool_cmd + ['user', 'enable', user]

    subprocess.run(setenabled_cmd, stdout=sys.stderr, check=True, text=True)

if 'groups' in request:
    # calculate differences between old and new group sets,
    # then iterate over each group to add/remove the user from it.

    new_groups = set(request['groups'])
    getgroups_cmd = sambatool_cmd + ['user', 'getgroups', user]
    with subprocess.Popen(getgroups_cmd, stdout=subprocess.PIPE, text=True) as proc:
        old_groups = set(proc.stdout.read().strip().split("\n"))

    old_groups -= {'Domain Users'}  # this group is always set, ignore it!

    add_groups = new_groups - old_groups
    for group in add_groups:
        subprocess.run(sambatool_cmd + ['group', "addmembers",
                       group, user], stdout=sys.stderr, check=True, text=True)

    rem_groups = old_groups - new_groups
    for group in rem_groups:
        subprocess.run(sambatool_cmd + ['group', "removemembers",
                       group, user], stdout=sys.stderr, check=True, text=True)

if 'display_name' in request:
    display_name = request['display_name']
    setname_cmd = ['podman', 'exec', '-i', 'samba-dc',
                   'pdbedit', '-u', user, f'--fullname={display_name}']
    subprocess.run(setname_cmd, stdout=sys.stderr, check=True, text=True)

if 'mail' in request:
    mail = request['mail']
    # retrieve the user's DN, example:
    # dn: CN=Administrator,CN=Users,DC=ad,DC=leader,DC=cluster0,DC=gs,DC=nethserver,DC=net
    getdn_cmd = sambatool_cmd + ['user', 'show', user, '--attributes=dn']
    proc = subprocess.run(getdn_cmd, check=True, capture_output=True, text=True)
    dn = proc.stdout.strip()
    if mail != '':
        ldbedit_cmd = ['podman', 'exec', '-i', 'samba-dc', 'ldbmodify', '-i', '-H', '/var/lib/samba/private/sam.ldb']
        ldbedit_input = f'{dn}\nchangetype: modify\nreplace: mail\nmail: {mail}\n'
    else:
        ldbedit_cmd = ['podman', 'exec', '-i', 'samba-dc', 'ldbmodify', '-H', '/var/lib/samba/private/sam.ldb']
        ldbedit_input = f'{dn}\nchangetype: modify\ndelete: mail\n'
    subprocess.run(ldbedit_cmd, input=ldbedit_input, stdout=sys.stderr, check=True, text=True)

json.dump({"status": "success", "message": "user_altered"}, fp=sys.stdout)
