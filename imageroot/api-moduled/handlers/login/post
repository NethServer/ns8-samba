#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import os
import agent
import subprocess
import hashlib

from agent.ldapproxy import Ldapproxy
from agent.ldapclient import Ldapclient

request = json.load(sys.stdin)

odomain = Ldapproxy().get_domain(os.environ["REALM"].lower())

oldapcli = Ldapclient.factory(**odomain)

try:
    user_dn = oldapcli.get_user_entry(request['username'])["dn"]
    ouser = oldapcli.get_user(request['username'])
except agent.ldapclient.exceptions.LdapclientEntryNotFound:
    sys.exit(2) # User not found

# Unique and impredictable cache file name:
cache_file = "/tmp/login_" + hashlib.sha256(("login-" + request['username'] + request['password']).encode()).hexdigest()

proc_kinit = subprocess.run(["podman", "exec", "-e", "KRB5CCNAME=" + cache_file, "-i", "samba-dc",
    "kinit", request["username"]],
    input=request["password"], text=True, capture_output=True)

oclaims = {
    "uid": ouser["user"],
    "groups": list(ogroup["group"] for ogroup in ouser["groups"]),
}

if proc_kinit.returncode != 0:
    if "Password expired.  You must change it now." in proc_kinit.stdout:
        # Password must be changed immediately: return a token limited to
        # password changing:
        oclaims["scope"] = ["change-password", "get-password-policy"]
    else:
        sys.exit(3) # Login failed

if "Domain Admins" not in oclaims["groups"]:
    oclaims["scope"] = ["change-password", "get-password-policy"]

# Clean up the cache file after a successful login:
subprocess.run(["podman", "exec", "samba-dc", "rm", "-f", cache_file], text=True, capture_output=True)

json.dump(oclaims, fp=sys.stdout)
