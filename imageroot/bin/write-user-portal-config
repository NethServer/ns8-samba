#!/usr/bin/env python3
#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import json
import agent
import agent.tasks
import os
import json


agent_install_dir = os.environ['AGENT_INSTALL_DIR']
# realm is mandatory we do not need to test it
realm = os.environ["REALM"].lower()

with agent.redis_connect(use_replica=True) as rdb:
    modules_set = set()
    # Generate the set of image ids of modules bound to us (Samba domain)
    for key, value in rdb.hscan_iter("cluster/module_domains"):
        # Iterate over the value and push each keys into modules_set
        # check if our realm matches
        if realm in value.split():
                # remove string numbers from the key sogo1 -> sogo
                modules_set.add(key.rstrip('0123456789'))

# Translate the image identifiers in module_set into human readable strings
names_set=set()
try:
    response = agent.tasks.run(agent_id='cluster', action='list-modules', data=None)
    for item in response['output']:
        if item.get('id') in modules_set:
            names_set.add(item.get('name'))
except Exception as ex:
    print(agent.SD_WARNING + "Failed to run cluster/list-modules action:", ex, file=sys.stderr)

# Write modules set to a JSON file
data = {"domain": realm, "services": list(names_set)}

with open(f'{agent_install_dir}/api-moduled/public/config.json', 'w') as file:
    json.dump(data, file)
