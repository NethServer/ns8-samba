#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import subprocess
import sys

request = json.load(sys.stdin)

password_policy = {
    'expiration': {},
    'strength': {}
}

if request['expiration']['enforced']:
    password_policy['expiration']['min_age'] = request['expiration']['min_age']
    password_policy['expiration']['max_age'] = request['expiration']['max_age']
else:
    password_policy['expiration']['min_age'] = 0
    password_policy['expiration']['max_age'] = 0

if request['strength']['enforced']:
    password_policy['strength']['history_length'] = request['strength']['history_length']
    password_policy['strength']['password_min_length'] = request['strength']['password_min_length']
    password_policy['strength']['complexity_check'] = request['strength']['complexity_check']
else:
    password_policy['strength']['history_length'] = 0
    password_policy['strength']['password_min_length'] = 0
    password_policy['strength']['complexity_check'] = False

result = subprocess.run(
    [
        'podman',
        'exec',
        'samba-dc',
        'samba-tool',
        'domain',
        'passwordsettings',
        'set',
        f'--min-pwd-age={password_policy["expiration"]["min_age"]}',
        f'--max-pwd-age={password_policy["expiration"]["max_age"]}',
        f'--history-length={password_policy["strength"]["history_length"]}',
        f'--min-pwd-length={password_policy["strength"]["password_min_length"]}',
        f'--complexity={"on" if password_policy["strength"]["complexity_check"] else "off"}'
    ],
    check=True, capture_output=True, text=True)

# print all changes without last two lines (success message and empty line)
json.dump({
    'changes': result.stdout.split('\n')[:-2]
}, fp=sys.stdout)
