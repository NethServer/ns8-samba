#!/bin/bash

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

exec 1>&2
set -e

if [[ -f samba_audit.pgdump ]] ; then
    echo "Restore samba_audit data in TimescaleDB:"
    write-timescaledb-config # generate timescaledb.env
    podman run \
        --rm \
        --log-driver=none \
        --network=none \
        --interactive \
        --replace --name=timescaledb --rm \
        --env=POSTGRES_DB=samba_audit \
        --env=PGPORT=15432 \
        --volume=../timescaledb-restoredb.d:/docker-entrypoint-initdb.d:z \
        --volume=timescaledb:/var/lib/postgresql/data:z \
        --env-file=timescaledb.env \
        "${TIMESCALEDB_IMAGE}" < samba_audit.pgdump
    rm -vf samba_audit.pgdump
fi

echo "Resume Samba ${SERVER_ROLE^^} state:"
podman run --hostname="${HOSTNAME}" --interactive --workdir=/var/lib/samba \
    --log-driver=none \
    --replace --name=samba-restore --rm \
    --entrypoint=[] \
    --env=SERVER_ROLE \
    --volume="config":/etc/samba \
    --volume="data":/var/lib/samba \
    "${SAMBA_DC_IMAGE}" bash -s <<'EOF'

set -e
nbname=$(hostname -s | tr "[a-z]" "[A-Z]")

if [[ "${SERVER_ROLE}" == "member" ]] ; then
    tar -x -f backup/samba-backup.tar.bz2 -v
    find . -type f -name '*.bak' | while read -r tdbbak ; do
        mv -v "${tdbbak}" "${tdbbak%%.bak}"
    done
    rm -rvf backup
else
    samba-tool domain backup restore \
        --backup-file=backup/samba-backup.tar.bz2 \
        --targetdir=restore \
        --newservername=${nbname}

    sed "s/netbios name = .*/netbios name = ${nbname}/" restore/etc/smb.conf.orig | tee /etc/samba/smb.conf

    rm -rvf private sysvol
    mv -v restore/private .
    mv -v restore/state/sysvol .
    mv -vf restore/state/*.tdb .
    rm -rvf restore backup
fi
net cache flush
EOF

if [[ -n "${IPADDRESS}" && -n "${REALM}" ]] ; then
    # Enable and start Samba only if both IPADDRESS and REALM were set
    # correctly:
    systemctl --user enable --now samba-dc.service
fi
