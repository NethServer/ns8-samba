#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import json
import agent
import samba
import subprocess

podman_exec = ["podman", "exec", "samba-dc"]

request = json.load(sys.stdin)

# Check if the share already exists
pcheck = subprocess.run(podman_exec + ["net", "conf", "showshare", request["name"]], stdout=subprocess.DEVNULL)
if pcheck.returncode != 0:
    agent.set_status('validation-failed')
    json.dump([{'field':'name', 'parameter':'name','value': request['name'], 'error':'share_not_found'}], fp=sys.stdout)
    sys.exit(2)

if 'description' in request:
    set_description_cmd = podman_exec + ["net", "conf", "setparm", request["name"], "comment", request["description"]]
    agent.run_helper(*set_description_cmd)

if 'enable_audit' in request:
    samba.configure_samba_audit(
        request['name'],
        request['enable_audit'],
        request.get('log_failed_events', False))

if 'enable_recycle' in request:
    samba.configure_recycle(
        request['name'],
        enable_recycle=request['enable_recycle'],
        recycle_retention=request.get('recycle_retention', 0),
        recycle_versions=request.get('recycle_versions', True),)

if 'browseable' in request:
    samba.configure_browseable(
        request['name'],
        request['browseable'])
