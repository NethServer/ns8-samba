@version: 4.3

#
# syslog-ng configuration for Samba Audit
#
# - Read smbd_audit records from /dev/log,
# - Split records in fields. Some of them have a fixed position, others
#   depend on the operation ("op")
# - Extract path value from records, assign remaining values to aux
# - Insert data in PosgreSQL/TimescalDB with high-resolution timestamp
#
# The DB destination has a disk queue: if the DB is down up to 100MB of
# data are collected.
#

options {
    ts-format(iso);
    frac-digits(6);
};

source s_devlog {
    system()
};

filter f_samba {
    priority(info) and facility(local7) and program("smbd_audit");
};

parser p_samba_audit_record {
    csv-parser(columns("proto", "addr", "user", "share", "op", "err_msg", "arg1", "arg2", "arg3", "arg4", "arg5", "arg_rest")
               delimiters("|")
               template("$MESSAGE")
               flags(strip-whitespace, greedy));
};

rewrite r_samba_extract_args {
    set("${arg1}", value("path")); # default path
    set("${arg2}|${arg3}|${arg4}|${arg5}|${arg_rest}", value("aux")); # default aux
    set("${arg4}", value("path") condition("${op}" eq "create_file"));
    set("${arg2}|${arg3}|${arg1}", value("aux")  condition("${op}" eq "create_file"));
    set("${arg2}", value("aux") condition("${op}" eq "renameat"));
    set("${arg1}", value("aux") condition("${op}" eq "openat"));
    set("${arg2}", value("path") condition("${op}" eq "openat"));
};

destination d_sql {
    sql(
        type(pgsql)
        host("127.0.0.1")
        port(15432)
        username("postgres")
        password("$(getenv POSTGRES_PASSWORD)")
        database("samba_audit")
        table("samba_audit")
        columns("time", "proto", "username", "addr", "share", "op", "result", "path", "aux")
        values("${R_ISODATE}", "${proto}", "${user}", "${addr}", "${share}", "${op}", "${err_msg}", "${path}", "${aux}")
        disk-buffer(
            dir("/var/lib/samba/syslog-ng")
            capacity-bytes(104857600)
            prealloc(yes)
        )
        batch-timeout(1000)
    );
};

log {
    source(s_devlog);
    filter(f_samba);
    parser(p_samba_audit_record);
    rewrite(r_samba_extract_args);
    destination(d_sql);
};
